---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";

const dsaConcepts = (await getCollection("concepts")).filter(
  (item) =>
    item.data.tags.includes("dsa") && !item.data.tags.includes("algorithm")
);

const algorithms = (await getCollection("concepts")).filter((item) =>
  item.data.tags.includes("algorithm")
);

const stlEntries = (await getCollection("concepts")).filter((item) =>
  item.data.tags.includes("stl")
);

const dsaProblems = await getCollection("dsaProblems");

const baseUrl = import.meta.env.BASE_URL;
---

<BaseLayout tabTitle="DSA">
  <h2>DSA</h2>

  <details>
    <summary><strong>C++ STL</strong></summary>
    <ul>
      {
        stlEntries.map((entry) => (
          <li>
            <a href={`${baseUrl}/dsa/${entry.slug}`}>{entry.data.title}</a>
          </li>
        ))
      }
    </ul>
  </details>

  <details>
    <summary><strong>Concepts</strong></summary>
    <ul>
      {
        dsaConcepts.map((entry) => (
          <li>
            <a href={`${baseUrl}/dsa/${entry.slug}`}>{entry.data.title}</a>
          </li>
        ))
      }
    </ul>
  </details>

  <details>
    <summary><strong>Sorting Algorithms</strong></summary>
    <ol>
      {
        algorithms.map((entry) => (
          <li>
            <a href={`${baseUrl}/dsa/${entry.slug}`}>{entry.data.title}</a>
          </li>
        ))
      }
    </ol>
  </details>

  <h3>Arrays & Strings:</h3>
  <ol>
    {
      dsaProblems
        .sort((a, b) => a.data.level - b.data.level)
        .map((entry) => {
          if (entry.data.ds === "array" || entry.data.ds === "string") {
            return (
              <li>
                {["ðŸ”µ", "ðŸŸ¢", "ðŸŸ¡", "ðŸ”´", "ðŸŸ£"][entry.data.level]}
                <a href={`${baseUrl}/dsa/${entry.slug}/`}>{entry.data.title}</a>
              </li>
            );
          }
        })
    }
  </ol>
</BaseLayout>
